---
description: Master index of all platform rulesets
globs: ["**/*"]
alwaysApply: true
---
# Recursive Learning Platform Rulesets

## Overview
This document serves as the master index for all rulesets in the Recursive Learning platform. It defines the relationships between rulesets and their application contexts.

## Ruleset Categories

### Layout & Structure
- [Admin Layout](mdc:admin-layout-structure-behavior.mdc)
  - Admin page structure
  - Component organization
  - Navigation patterns
  - UI/UX standards
  
- [Client Layout](mdc:client-layout-structure-behavior.mdc)
  - Client page structure
  - Content organization
  - Navigation flow
  - User experience

### Core Platform Rules
- [Platform Standards](mdc:platform-standards.mdc)
  - Header standardization
  - Authentication flow
  - Error handling patterns
  - Resource naming conventions
  - Monitoring requirements
  - Security protocols

### API Standards
- [API Gateway Rules](mdc:api-gateway-standards.mdc)
  - Endpoint structure
  - CORS configuration
  - VPC Link management
  - CloudFormation standards
  - Integration patterns
  - Error response format

### Deprecated Rules
- ~~[Redis Access](mdc:redis-api-access-patterns.mdc)~~ (Deprecated as of April 21, 2024)
  - Replaced by Platform Standards and API Gateway Rules
  - Migration guide available in Platform Standards

## Application Context

### Admin Interface
- Primary: Admin Layout Rules
- Secondary: Platform Standards
- Use Cases:
  - Admin dashboard construction
  - Content management interfaces
  - System configuration panels
  - Monitoring displays

### Client Interface
- Primary: Client Layout Rules
- Secondary: Platform Standards
- Use Cases:
  - Learning content display
  - Interactive exercises
  - Progress tracking
  - User settings

### API Layer
- Primary: API Gateway Rules
- Secondary: Platform Standards
- Use Cases:
  - Gateway configuration
  - VPC Link management
  - Integration patterns
  - Performance optimization

## Rule Precedence

1. Security Rules (Always highest priority)
2. Platform Standards
3. API Gateway Rules
4. Layout Rules
5. Documentation Rules

## Validation Methods

### Automated Checks
- Pre-commit hooks
- CI/CD pipeline tests
- Linting rules
- Unit tests

### Manual Review
- Code review checklist
- Design review process
- Performance audits
- Security assessments

## Change Management

### Process
1. Propose change
2. Review impact
3. Update documentation
4. Implement changes
5. Validate compliance
6. Deploy updates

### Requirements
- Version control all changes
- Document rationale
- Update affected systems
- Notify stakeholders

## Compliance Tracking

### Metrics
- Rule compliance percentage
- Violation frequency
- Fix turnaround time
- Technical debt impact

### Reporting
- Weekly compliance reports
- Monthly trend analysis
- Quarterly reviews
- Annual assessments

## Tools & Integration

### Development
- ESLint rules
- Prettier config
- TypeScript types
- JSDoc templates

### Testing
- Jest configurations
- Cypress test suites
- Performance benchmarks
- Security scans

### Documentation
- JSDoc generation
- README templates
- API documentation
- Change logs

## Best Practices

### Code Organization
- Follow folder structure
- Use consistent naming
- Implement patterns
- Document decisions

### Performance
- Optimize loading
- Cache effectively
- Minimize requests
- Monitor metrics

### Security
- Validate input
- Sanitize output
- Manage permissions
- Log activities

### Accessibility
- Use semantic HTML
- Add ARIA labels
- Test with readers
- Support keyboard

## Version Control

### Branch Strategy
- Feature branches
- Release branches
- Hotfix process
- Version tagging

### Commit Standards
- Clear messages
- Linked issues
- Change scope
- Breaking changes

## Deployment

### Environments
- Development
- Staging
- Production
- Testing

### Process
1. Build verification
2. Rule validation
3. Security checks
4. Performance tests
5. Deployment approval
6. Release notes

## Support

### Documentation
- Implementation guides
- Troubleshooting steps
- Best practices
- Examples

### Resources
- Code templates
- Style guides
- Tool configs
- Test suites 
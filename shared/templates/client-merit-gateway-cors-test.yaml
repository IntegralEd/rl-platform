# Recursive Learning Platform API Gateway Configuration
# Version: 1.1.0
# Last Updated: April 21, 2024
# Environment: Production
# Description: OpenAPI 3.0 specification for Merit API Gateway with CORS and VPC Link Support

openapi: 3.0.3
info:
  title: Merit API Gateway
  description: API Gateway configuration with CORS support for Merit integration
  version: 1.0.0
  contact:
    name: Recursive Learning Platform Team
    url: https://recursivelearning.app

servers:
  - url: https://api.recursivelearning.app/prod
    description: Merit Production API Gateway endpoint
  - url: https://7j0xnkurfl.execute-api.us-east-2.amazonaws.com/prod
    description: Direct API Gateway endpoint

x-amazon-apigateway-domain-name:
  domainName: api.recursivelearning.app
  certificateArn: arn:aws:acm:us-east-2:559050208320:certificate/d1ba7f15-1f1b-400c-942e-c5e5a60ddf8c
  endpointConfiguration:
    types:
      - REGIONAL
  securityPolicy: TLS_1_2

x-amazon-apigateway-vpc-link:
  id: vpcl-0d2c3e4f5a6b7c8d9
  targetArns:
    - arn:aws:elasticloadbalancing:us-east-2:559050208320:loadbalancer/app/merit-api-lb/1120e7fa7fe27cd1

paths:
  #-----------------------------------------------------------------------------
  # Context Management Endpoint (Lambda Integration)
  #-----------------------------------------------------------------------------
  /api/v1/context:
    options:
      summary: CORS preflight handler for context endpoint
      description: Handles OPTIONS requests for CORS preflight checks
      responses:
        '200':
          description: Successful CORS preflight response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'https://recursivelearning.app'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS,HEAD'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-api-key,X-Project-ID,Origin,Authorization'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            responseTemplates:
              application/json: |
                {
                  "status": "success",
                  "message": "CORS preflight successful"
                }

    post:
      summary: Create or update context
      description: Endpoint for creating or updating context data
      security:
        - ApiKeyAuth: []
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        uri: https://api.recursivelearning.app/prod/api/v1/context
        httpMethod: POST
        connectionType: VPC_LINK
        connectionId: vpcl-0d2c3e4f5a6b7c8d9
        requestParameters:
          integration.request.header.X-Forwarded-For: context.identity.sourceIp
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'https://recursivelearning.app'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS,HEAD'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-api-key,X-Project-ID,Origin,Authorization'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
      responses:
        '200':
          description: Successful operation
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string

  #-----------------------------------------------------------------------------
  # Mock Testing Endpoint (Mock Integration)
  #-----------------------------------------------------------------------------
  /api/v1/mock:
    get:
      summary: Mock endpoint for testing
      description: Simple endpoint that returns a mock response for testing
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Successful mock response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  timestamp:
                    type: string
      x-amazon-apigateway-integration:
        type: mock
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'https://recursivelearning.app'"
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-api-key,X-Project-ID,Origin,Authorization'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            responseTemplates:
              application/json: '{"message": "Mock response successful", "timestamp": "$context.requestTimeEpoch"}'

    options:
      summary: CORS preflight handler for mock endpoint
      description: Handles OPTIONS requests for CORS preflight checks
      responses:
        '200':
          description: Successful CORS preflight response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode": 200
            }
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'https://recursivelearning.app'"
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-api-key,X-Project-ID,Origin,Authorization'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            responseTemplates:
              application/json: |
                {
                  "status": "success",
                  "message": "CORS preflight successful"
                }

#-----------------------------------------------------------------------------
# Security Definitions
#-----------------------------------------------------------------------------
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: x-api-key
      in: header
      description: API key for authentication (Production Key: 68gmsx2jsk)

#-----------------------------------------------------------------------------
# Error Response Configuration
#-----------------------------------------------------------------------------
x-amazon-apigateway-gateway-responses:
  # 4XX Client Errors
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "'https://recursivelearning.app'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,x-api-key,Authorization'"
      gatewayresponse.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
    responseTemplates:
      application/json: |
        {
          "error": true,
          "type": "client_error",
          "message": "$context.error.message",
          "requestId": "$context.requestId"
        }

  # 5XX Server Errors
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "'https://recursivelearning.app'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,x-api-key,Authorization'"
      gatewayresponse.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
    responseTemplates:
      application/json: |
        {
          "error": true,
          "type": "server_error",
          "message": "An internal server error occurred",
          "requestId": "$context.requestId"
        }

x-amazon-apigateway-endpoint-configuration:
  types:
    - REGIONAL
  vpcEndpointIds:
    - vpce-07e76ce384fa696e0 
---
description: Platform Asset Convention Rules
globs: ["**/*.html", "**/shared/platform/**/*"]
alwaysApply: true
---

# Platform Asset Convention Rules

## Overview
These rules define the conventions for platform-level assets that are used across the Recursive Learning Platform, distinguishing them from general shared resources.

## Path Convention
```
/shared/
  ├── platform/           # Platform-specific resources
  │   ├── css/           # Platform styling
  │   ├── images/        # Platform UI elements
  │   └── js/            # Platform functionality
  │
  └── assets/            # General shared resources
      ├── css/           # Shared styles
      ├── images/        # Shared images
      └── js/            # Shared scripts
```

## Naming Conventions

### Images
- Format: `platform-{purpose}-{variant}-{color}.{ext}`
- Examples:
  - `platform-send-icon-white.svg`
  - `platform-logo-primary.png`
  - `platform-next-button-blue.svg`

### CSS
- Format: `platform-{scope}-{purpose}.css`
- Examples:
  - `platform-variables.css`
  - `platform-admin-layout.css`
  - `platform-components.css`

### JavaScript
- Format: `platform-{scope}-{purpose}.js`
- Examples:
  - `platform-auth-core.js`
  - `platform-admin-router.js`
  - `platform-utils.js`

## Usage Levels

### 1. Core Platform Resources
- Path: `/shared/platform/*`
- Usage: Core Recursive Learning functionality
- Example: `/shared/platform/css/platform-variables.css`

### 2. Admin Pages
- Path: `/admin/pages/*`
- Usage: Administrative interfaces
- Example: `<link href="/shared/platform/css/platform-admin-layout.css">`

### 3. Demo/RLP Pages
- Path: `/clients/rlp/*`
- Usage: Platform demonstration pages
- Example: `<img src="/shared/platform/images/platform-logo-white.svg">`

## Semantic Clarity Rules

### 1. Resource Classification
- Platform resources go in `/shared/platform/*`
- General shared resources stay in `/shared/assets/*`
- Clear separation between platform and shared assets

### 2. Naming Rules
- Always use `platform-` prefix for platform files
- Keep consistent casing (all lowercase for filenames)
- Be explicit about file purpose and variant

### 3. Usage Guidelines
- Use platform resources for core RL functionality
- Use shared assets for common but non-platform specific needs
- Document any crossover or exceptions

## Implementation Guide

### Moving Existing Assets
1. Identify platform-specific resources
2. Create `/shared/platform/` structure
3. Move and rename following convention
4. Update all references
5. Document changes

### Creating New Assets
1. Determine if platform-specific
2. Choose correct directory (platform vs assets)
3. Follow naming convention
4. Document in asset inventory
5. Update relevant teams

## Success Metrics
- Clear distinction between platform and shared resources
- Reduced confusion in asset management
- Easier maintenance and updates
- Better collaboration between human and AI team members

## Notes
- These conventions support #clear #kind #curious collaboration
- Help distinguish platform-level from general shared resources
- Reduce cognitive load in asset management
- Support long-term maintainability 
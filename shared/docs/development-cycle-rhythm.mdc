---
description: 
globs: 
alwaysApply: false
---
# Development Cycle Rhythm

*Last updated: 2023-04-07*

This document outlines our approach to maintaining development cycle rhythm between frontend and backend teams using automated monitoring.

## Overview

The Development Cycle Monitor provides regular checks of:

1. Backend resource updates
2. Backend team standup reports in Airtable
3. Documentation (MDC files) that need updates
4. Suggested actions for synchronization

This creates a consistent rhythm of:
- **Check** → **Update** → **Document** → **Report** → **Check** (repeat)

## Setup as a Cursor Rule

To set up as an always-on Cursor rule:

1. Open your Cursor rules configuration:
   - Navigate to `.cursor/rules/` directory
   - Create a new rule file `development-cycle-monitor.mdc`

2. Add the following configuration:

```
# Development Cycle Monitor
@shared/assets/js/development-cycle-monitor.js

Description:
Monitors backend updates and suggests documentation changes to maintain frontend/backend sync.

Features:
- Checks backend resources API endpoint
- Monitors Airtable for backend team standup reports
- Identifies MDC files needing updates
- Suggests next actions for development cycle
```

3. The monitor will start automatically when Cursor loads this rule

## Manual Usage

You can also use the monitor manually:

```javascript
// Run a single check
window.developmentCycleMonitor.run().then(results => {
  console.log(results);
});

// Start ongoing monitoring (hourly by default)
const stopMonitoring = window.developmentCycleMonitor.start();

// Stop monitoring when needed
stopMonitoring();
```

## Configuration Options

Adjust the monitor configuration in `development-cycle-monitor.js`:

```javascript
const MONITOR_CONFIG = {
  CHECK_INTERVAL: 3600000, // 1 hour in milliseconds
  BACKEND_ENDPOINT: '/api/v1/status/resources',
  MDC_PATH: '/shared/docs/',
  STANDUP_PATH: '/shared/docs/standup-reports/',
  AUTO_UPDATE: false // Set to true to enable automatic MDC updates
};
```

## Output Format

The monitor generates reports in markdown format with sections for:

1. **Backend Resources** - New or updated backend resources
2. **Backend Team Reports** - Recent standup reports from backend team
3. **Documentation Status** - MDC files needing updates
4. **Suggested Actions** - Recommended next steps

Example output:

```markdown
# Development Cycle Check: 2023-04-07T14:30:00.000Z

## Backend Resources
- 3 new/updated resources found

Updated resources:
- **URL Pattern Matcher** (API) - Updated 4/6/2023, 2:15:00 PM
- **Airtable Integration** (Database) - Updated 4/6/2023, 5:30:00 PM
- **Authentication Service** (API) - Updated 4/7/2023, 9:45:00 AM

## Backend Team Reports
- 1 new reports found

Latest reports:
- **Backend Standup 2023-04-07 v01** - 2023-04-07
  Summary: Implemented URL pattern matching and Airtable integration...

## Documentation Status
- 2 documents need updates

Documents to update:
- **url-conventions.mdc**
  Reason: Backend resource URL Pattern Matcher was updated after MDC file
- **airtable-resource-map-integration.mdc**
  Reason: Backend resource Airtable Integration was updated after MDC file

## Suggested Actions
### Update MDC documentation to reflect backend changes
- Update `url-conventions.mdc` to reflect changes in URL Pattern Matcher
- Update `airtable-resource-map-integration.mdc` to reflect changes in Airtable Integration

### Create a new standup report to align with backend team
- Create a new standup report addressing backend updates
- Reference the latest backend report: **Backend Standup 2023-04-07 v01**
```

## Best Practices

1. **MDC File Compatibility**:
   - Include a "Last updated: YYYY-MM-DD" line in all MDC files
   - This helps the monitor identify which files need updates

2. **Report Naming**:
   - Use consistent naming for standup reports
   - Follow the pattern: "Frontend Standup YYYY-MM-DD vXX"

3. **Automation Level**:
   - Start with `AUTO_UPDATE: false` to review suggestions manually
   - Once comfortable, enable auto-updates for certain actions

## Integration with Backend Team

Share this approach with the backend team for bidirectional awareness:

1. Agree on common resource identifiers
2. Establish expected Airtable report formats
3. Use the same MDC update markers

This approach creates a reliable rhythm where both teams are continuously aware of each other's progress, reducing integration challenges and maintaining documentation accuracy.

## Troubleshooting

If the monitor is not working correctly:

1. Check browser console for errors
2. Verify API endpoint availability
3. Confirm Airtable access permissions
4. Check MDC file format compatibility 